# .gitlab-ci.yml

stages:
  - build
  - deploy

# Build stage: Build the Docker image
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

deploy:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - "command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - ssh-keyscan -t rsa $REMOTE_HOST >> ~/.ssh/known_hosts

  script:
    - ssh $REMOTE_USER@$REMOTE_HOST "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - ssh $REMOTE_USER@$REMOTE_HOST "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - ssh $REMOTE_USER@$REMOTE_HOST "docker stop $CI_REGISTRY_IMAGE || true"  # Stop the existing container if it's running
    - ssh $REMOTE_USER@$REMOTE_HOST "docker rm $CI_REGISTRY_IMAGE || true"    # Remove the existing container if it exists
    - ssh $REMOTE_USER@$REMOTE_HOST "docker run -d -p 1314:1314 --name $CI_REGISTRY_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"