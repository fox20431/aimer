name: Angular CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_NAME: wingv

jobs:
  build:
    strategy:
      matrix:
        node-version: [16.x]
    name: Prepare Environment
    runs-on: ubuntu-latest

    steps:
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /var/lib/docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-
      - name: Set the version for ENV
        run: |
          echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_HOST }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Docker setup
        run: |
          docker build -t $APP_NAME -f Dockerfile.wingv . 
          docker tag $APP_NAME ${{ secrets.DOCKER_REGISTRY_HOST }}/$APP_NAME:${{ env.VERSION }}
          docker push ${{ secrets.DOCKER_REGISTRY_HOST }}/$APP_NAME:${{ env.VERSION }}
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
      - name: Docker deploy
        run: |
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "\
            docker rm -f $APP_NAME; \
            docker pull ${{ secrets.DOCKER_REGISTRY_HOST }}/$APP_NAME:${{ env.VERSION }}; \
            docker run -itd -p 1314:1314 --name=$APP_NAME ${{ secrets.DOCKER_REGISTRY_HOST }}/$APP_NAME:${{ env.VERSION }}; \
            "